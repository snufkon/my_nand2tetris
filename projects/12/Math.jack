// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A basic math library.
 */
class Math {
    static Array twoToThe;

    /** Initializes the library. */
    function void init() {
      let twoToThe = Array.new(16);
      let twoToThe[0]  =           1;
      let twoToThe[1]  =           2;
      let twoToThe[2]  =           4;
      let twoToThe[3]  =           8;
      let twoToThe[4]  =          16;
      let twoToThe[5]  =          32;
      let twoToThe[6]  =          64;
      let twoToThe[7]  =         128;
      let twoToThe[8]  =         256;
      let twoToThe[9]  =         512;
      let twoToThe[10] =        1024;
      let twoToThe[11] =        2048;
      let twoToThe[12] =        4096;
      let twoToThe[13] =        8192;
      let twoToThe[14] =       16384;
      let twoToThe[15] = 16384+16384; // to avoid 'Integer constant too big' error

      return;
    }

    function boolean bit(int x, int j) {
      var int result;
      let result = x & twoToThe[j];
      if (result = 0) {
        return false;
      } else {
        return true;
      }
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
      if (x < 0) {
        return -x;
      } else {
        return x;
      }
    }

    /** Returns the product of x and y. */
    function int multiply(int x, int y) {
      var int sum, shiftedX, j;
      let sum = 0;
      let shiftedX = x;

      let j = 0;
      while (j < 16) {
        if (Math.bit(y,j )) {
          let sum = sum + shiftedX;
        }
        let shiftedX = shiftedX + shiftedX;
        let j = j + 1;
      }
      return sum;      
    }

    /** Returns the integer part of x/y. */
    function int divide(int x, int y) {
      var int q, mul;
      let mul = 1;
      
      if (x < 0) {
        if (y > 0) {
          let mul = -1;
        }
      } else {
        if (y < 0) {
          let mul = -1;
        }
      }
      let x = Math.abs(x);
      let y = Math.abs(y);
      
      if (y > x) {
        return 0;
      }
      let q = Math.divide(x, Math.multiply(2,y));
      if ((x - (2 * q * y)) < y) {
        return (2 * q) * mul;
      } else {
        return (2 * q + 1) * mul;
      }
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
      var int y, j, temp;
      let y = 0;
      let j = 7;
      while (~(j < 0)) {
        let temp = y + twoToThe[j];
        if (~(temp*temp > x) & (temp*temp > 0)) {
          let y = temp;
        }
        let j = j - 1;
      }
      return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
      if (a > b) {
        return a;
      } else {
        return b;
      }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
      if (a < b) {
        return a;
      } else {
        return b;
      }
    }
}
